<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <!--Scrollbar-->
    <!--Scrollbar-->
    <!--Scrollbar-->

    <Style
        x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Thumb}">
                    <Grid
                        x:Name="Grid">
                        <Rectangle
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Fill="Transparent" />
                        <Border
                            x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Tag"
                            Value="Horizontal">
                            <Setter
                                TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                            <Setter
                                TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="FocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        StrokeDashArray="1 2"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        SnapsToDevicePixels="true"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type ScrollBar}">
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="false" />
        <Setter
            Property="Foreground"
            Value="#ADABAB" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Width"
            Value="7" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{DynamicResource WhiteBrush_40}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Opacity="0"
                                    Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Opacity="0"
                                    Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            SourceName="Thumb"
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Value="{DynamicResource WhiteBrush_65}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>
                        <Trigger
                            SourceName="Thumb"
                            Property="IsDragging"
                            Value="true">
                            <Setter
                                Value="{DynamicResource WhiteBrush_15}"
                                TargetName="Thumb"
                                Property="Background" />
                        </Trigger>

                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="Orientation"
                            Value="Horizontal">
                            <Setter
                                TargetName="GridRoot"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter
                                TargetName="PART_Track"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter
                                Property="Width"
                                Value="Auto" />
                            <Setter
                                Property="Height"
                                Value="8" />
                            <Setter
                                TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                            <Setter
                                TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                            <Setter
                                TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Buttons-->
    <!--Buttons-->
    <!--Buttons-->

    <Style
        TargetType="Button"
        x:Key="MainNavigate_Button">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Padding="0 15"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        TextWrapping="Wrap"
                                        Style="{StaticResource NormalLarge}"
                                        Text="{Binding}" />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter
            Property="Foreground"
            Value="WhiteSmoke" />
        <Setter
            Property="Margin"
            Value="5 2" />
        <Setter
            Property="Background"
            Value="#0B2447" />
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    Value="#7FC7D9" />
                <Setter
                    Property="Foreground"
                    Value="Black" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="#6DA4AA" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Visual-->
    <!--Default-->
    <Style
        TargetType="TextBlock"
        x:Key="ButtonText"
        BasedOn="{StaticResource NormalSmall}" />
    <ControlTemplate
        x:Key="TextBlockButton"
        TargetType="{x:Type ButtonBase}">
        <Border
            x:Name="border"
            Cursor="Hand"
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="0"
            SnapsToDevicePixels="true">
            <ContentPresenter
                x:Name="contentPresenter"
                RecognizesAccessKey="True"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                Focusable="False">
                <ContentPresenter.ContentTemplate>
                    <DataTemplate>
                        <DataTemplate.Triggers>
                            <DataTrigger
                                Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsPressed}"
                                Value="True">
                                <Setter
                                    TargetName="textblock"
                                    Property="TextBlock.Foreground"
                                    Value="#E95793" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}"
                                Value="True">
                                <Setter
                                    TargetName="textblock"
                                    Property="TextBlock.TextDecorations"
                                    Value="Underline">
                                </Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                        <TextBlock
                            x:Name="textblock"
                            Foreground="{StaticResource WhiteBrush}"
                            Style="{DynamicResource ButtonText}"
                            Text="{Binding}"
                            TextDecorations="{x:Null}">
                        </TextBlock>
                    </DataTemplate>
                </ContentPresenter.ContentTemplate>
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="Button.IsDefaulted"
                Value="true">
                <Setter
                    Property="BorderBrush"
                    TargetName="border"
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger
                Property="IsMouseOver"
                Value="true">
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="true">
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter
                    Property="Visibility"
                    Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="RoundMediaButton"
        TargetType="{x:Type Button}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource Button_Bg1}" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="1" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        CornerRadius="{Binding Path=ActualHeight, ElementName=border}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            RecognizesAccessKey="True"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Focusable="False">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        x:Name="textblock"
                                        Foreground="{StaticResource WhiteBrush}"
                                        Style="{DynamicResource ButtonText}"
                                        Text="{Binding}">
                                    </TextBlock>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsDefaulted"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource LightTealBrush}" />
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource WhiteBrush_65}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource GrayBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListViewItem-->
    <!--ListViewItem-->
    <!--ListViewItem-->

    <!--Visual-->
    <Style
        x:Key="Transparent_ListViewItem_FocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        StrokeDashArray="1 2"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        SnapsToDevicePixels="true"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="Transparent_ListViewItemStyle"
        TargetType="{x:Type ListViewItem}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="Padding"
            Value="4,1" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource Transparent_ListViewItem_FocusVisual}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource Item.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="Selector.IsSelectionActive"
                                    Value="False" />
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="Selector.IsSelectionActive"
                                    Value="True" />
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="TextElement.Foreground"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListView-->
    <!--ListView-->
    <!--ListView-->

    <SolidColorBrush
        x:Key="ListBox.Static.Background"
        Color="#FFFFFFFF" />
    <SolidColorBrush
        x:Key="ListBox.Static.Border"
        Color="#FFABADB3" />
    <SolidColorBrush
        x:Key="ListBox.Disabled.Background"
        Color="#FFFFFFFF" />
    <SolidColorBrush
        x:Key="ListBox.Disabled.Border"
        Color="#FFD9D9D9" />
    <Style
        x:Key="Fade_ListViewStyle"
        TargetType="{x:Type ListView}">
        <Setter
            Property="Background"
            Value="{StaticResource WhiteBrush_15}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource WhiteBrush_65}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="ItemContainerStyle"
            Value="{StaticResource Transparent_ListViewItemStyle}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListView}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="1"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Focusable="false"
                            Padding="{TemplateBinding Padding}">
                            <ItemsPresenter
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource WhiteBrush_40}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource GrayBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsGrouping"
                                    Value="true" />
                                <Condition
                                    Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                    Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboboxItem-->
    <!--ComboboxItem-->
    <!--ComboboxItem-->

    <Style
        x:Key="Fade_ComboBoxItemContainerStyle"
        TargetType="{x:Type ComboBoxItem}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="Padding"
            Value="4,1" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter
            Property="VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="Black" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="BorderThickness"
            Value="0" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource Item.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="Selector.IsSelectionActive"
                                    Value="False" />
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="Selector.IsSelectionActive"
                                    Value="True" />
                                <Condition
                                    Property="IsSelected"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedActive.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource Item.SelectedActive.Border}" />
                        </MultiTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="TextElement.Foreground"
                                TargetName="Bd"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Combobox-->
    <!--Combobox-->
    <!--Combobox-->

    <SolidColorBrush
        x:Key="TextBox.Static.Background"
        Color="{StaticResource White_15}" />
    <Style
        x:Key="ComboBoxEditableTextBox"
        TargetType="{x:Type TextBox}">
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="AllowDrop"
            Value="true" />
        <Setter
            Property="MinWidth"
            Value="0" />
        <Setter
            Property="MinHeight"
            Value="0" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush
        x:Key="ComboBox.Static.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="{StaticResource White_15}"
            Offset="0.0" />
        <GradientStop
            Color="{StaticResource White_40}"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.Static.Border"
        Color="#FFACACAC" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Glyph"
        Color="#FF606060" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Background"
        Color="{StaticResource White_15}" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Border"
        Color="#FFABADB3" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Button.Background"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Button.Border"
        Color="Transparent" />
    <LinearGradientBrush
        x:Key="ComboBox.MouseOver.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="{StaticResource White_15}"
            Offset="0.0" />
        <GradientStop
            Color="{StaticResource White_40}"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Border"
        Color="{StaticResource DarkGrayBlue_85}" />
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Glyph"
        Color="#FF000000" />
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Editable.Background"
        Color="{StaticResource White_15}" />
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Editable.Border"
        Color="{StaticResource White_65}" />
    <LinearGradientBrush
        x:Key="ComboBox.MouseOver.Editable.Button.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="{StaticResource White_15}"
            Offset="0.0" />
        <GradientStop
            Color="{StaticResource White_40}"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Editable.Button.Border"
        Color="#FF7EB4EA" />
    <LinearGradientBrush
        x:Key="ComboBox.Pressed.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#FFDAECFC"
            Offset="0.0" />
        <GradientStop
            Color="#FFC4E0FC"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Border"
        Color="{StaticResource White}" />
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Glyph"
        Color="#FF000000" />
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Editable.Background"
        Color="{StaticResource White_15}" />
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Editable.Border"
        Color="{StaticResource White_15}" />
    <LinearGradientBrush
        x:Key="ComboBox.Pressed.Editable.Button.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="{StaticResource White_15}"
            Offset="0.0" />
        <GradientStop
            Color="{StaticResource White_40}"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Editable.Button.Border"
        Color="{StaticResource White}" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Background"
        Color="#FFF0F0F0" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Border"
        Color="#FFD9D9D9" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Glyph"
        Color="#FFBFBFBF" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Background"
        Color="#FFFFFFFF" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Border"
        Color="#FFBFBFBF" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Button.Background"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Button.Border"
        Color="Transparent" />
    <Style
        x:Key="ComboBoxToggleButton"
        TargetType="{x:Type ToggleButton}">
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="IsTabStop"
            Value="false" />
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="ClickMode"
            Value="Press" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        CornerRadius="4"
                        Background="{StaticResource ComboBox.Static.Background}"
                        BorderBrush="{StaticResource ComboBox.Static.Border}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Border
                            x:Name="splitBorder"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            HorizontalAlignment="Right"
                            Margin="0"
                            SnapsToDevicePixels="true"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path
                                x:Name="arrow"
                                Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                Fill="{StaticResource ComboBox.Static.Glyph}"
                                HorizontalAlignment="Center"
                                Margin="0"
                                VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate
        x:Key="ComboBoxEditableTemplate"
        TargetType="{x:Type ComboBox}">
        <Grid
            x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                    Width="0" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    Color="Transparent"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1">
                        <ScrollViewer
                            x:Name="DropDownScrollViewer">
                            <Grid
                                x:Name="grid"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    HorizontalAlignment="Left"
                                    Height="0"
                                    VerticalAlignment="Top"
                                    Width="0">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Fill="{Binding Background, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Grid.ColumnSpan="2"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <Border
                x:Name="border"
                Background="{StaticResource TextBox.Static.Background}"
                Margin="{TemplateBinding BorderThickness}">
                <TextBox
                    x:Name="PART_EditableTextBox"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    Margin="{TemplateBinding Padding}"
                    Style="{StaticResource ComboBoxEditableTextBox}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Opacity"
                    TargetName="border"
                    Value="0.56" />
            </Trigger>
            <Trigger
                Property="IsKeyboardFocusWithin"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="Black" />
            </Trigger>
            <Trigger
                Property="HasDropShadow"
                SourceName="PART_Popup"
                Value="true">
                <Setter
                    Property="Margin"
                    TargetName="shadow"
                    Value="0,0,5,5" />
                <Setter
                    Property="Color"
                    TargetName="shadow"
                    Value="#71000000" />
            </Trigger>
            <Trigger
                Property="HasItems"
                Value="false">
                <Setter
                    Property="Height"
                    TargetName="dropDownBorder"
                    Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsGrouping"
                        Value="true" />
                    <Condition
                        Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="ScrollViewer.CanContentScroll"
                    Value="false" />
            </MultiTrigger>
            <Trigger
                Property="ScrollViewer.CanContentScroll"
                SourceName="DropDownScrollViewer"
                Value="false">
                <Setter
                    Property="Canvas.Top"
                    TargetName="opaqueRect"
                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter
                    Property="Canvas.Left"
                    TargetName="opaqueRect"
                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="ComboBoxTemplate"
        TargetType="{x:Type ComboBox}">
        <Grid
            x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                    Width="0" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Margin="1"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    Color="Transparent"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border
                        x:Name="dropDownBorder"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1">
                        <ScrollViewer
                            x:Name="DropDownScrollViewer">
                            <Grid
                                x:Name="grid"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    HorizontalAlignment="Left"
                                    Height="0"
                                    VerticalAlignment="Top"
                                    Width="0">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Fill="{Binding Background, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Grid.ColumnSpan="2"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter
                x:Name="contentPresenter"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                IsHitTestVisible="false"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="HasDropShadow"
                SourceName="PART_Popup"
                Value="true">
                <Setter
                    Property="Margin"
                    TargetName="shadow"
                    Value="0,0,5,5" />
                <Setter
                    Property="Color"
                    TargetName="shadow"
                    Value="#71000000" />
            </Trigger>
            <Trigger
                Property="HasItems"
                Value="false">
                <Setter
                    Property="Height"
                    TargetName="dropDownBorder"
                    Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsGrouping"
                        Value="true" />
                    <Condition
                        Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="ScrollViewer.CanContentScroll"
                    Value="false" />
            </MultiTrigger>
            <Trigger
                Property="ScrollViewer.CanContentScroll"
                SourceName="DropDownScrollViewer"
                Value="false">
                <Setter
                    Property="Canvas.Top"
                    TargetName="opaqueRect"
                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter
                    Property="Canvas.Left"
                    TargetName="opaqueRect"
                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style
        x:Key="Fade_ComboBoxStyle"
        TargetType="{x:Type ComboBox}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource ComboBox.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ComboBox.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource WhiteBrush}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="Padding"
            Value="6,3,5,3" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template"
            Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger
                Property="IsEditable"
                Value="true">
                <Setter
                    Property="IsTabStop"
                    Value="false" />
                <Setter
                    Property="Padding"
                    Value="2" />
                <Setter
                    Property="Template"
                    Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Slider-->
    <!--Slider-->
    <!--Slider-->

    <Style
        x:Key="RepeatButtonTransparent"
        TargetType="{x:Type RepeatButton}">
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="IsTabStop"
            Value="false" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Fill="{TemplateBinding Background}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush
        x:Key="SliderThumb.Static.Background"
        StartPoint="1 0"
        EndPoint="1 1">
        <GradientStop
            Color="{StaticResource DarkBlue}"
            Offset="0" />
        <GradientStop
            Color="{StaticResource Teal}"
            Offset="0.5" />
        <GradientStop
            Color="{StaticResource Purple}"
            Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="SliderThumb.Static.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="SliderThumb.Static.Foreground"
        Color="#FFE5E5E5" />
    <SolidColorBrush
        x:Key="SliderThumb.MouseOver.Background"
        Color="#FFDCECFC" />
    <SolidColorBrush
        x:Key="SliderThumb.MouseOver.Border"
        Color="#FF7Eb4EA" />
    <SolidColorBrush
        x:Key="SliderThumb.Pressed.Background"
        Color="#FFDAECFC" />
    <SolidColorBrush
        x:Key="SliderThumb.Pressed.Border"
        Color="#FF569DE5" />
    <SolidColorBrush
        x:Key="SliderThumb.Disabled.Background"
        Color="#FFF0F0F0" />
    <SolidColorBrush
        x:Key="SliderThumb.Disabled.Border"
        Color="#FFD9D9D9" />
    <SolidColorBrush
        x:Key="SliderThumb.Track.Background"
        Color="{StaticResource White_85}" />
    <SolidColorBrush
        x:Key="SliderThumb.Track.Border"
        Color="Transparent" />
    <ControlTemplate
        x:Key="SliderThumbHorizontalDefault"
        TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            UseLayoutRounding="True"
            VerticalAlignment="Center">
            <Path
                x:Name="grip"
                Data="M8 32 L32 56 L56 32 L32 8 Z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                StrokeThickness="1"
                UseLayoutRounding="True"
                VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger
                Property="IsDragging"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="SliderThumbHorizontalTop"
        TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            UseLayoutRounding="True"
            VerticalAlignment="Center">
            <Path
                x:Name="grip"
                Data="M8 32 L32 56 L56 32 L32 8 Z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                StrokeThickness="1"
                UseLayoutRounding="True"
                VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger
                Property="IsDragging"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="SliderThumbHorizontalBottom"
        TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            UseLayoutRounding="True"
            VerticalAlignment="Center">
            <Path
                x:Name="grip"
                Data="M8 32 L32 56 L56 32 L32 8 Z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                StrokeThickness="1"
                UseLayoutRounding="True"
                VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger
                Property="IsDragging"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="SliderHorizontal"
        TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="Auto" />
                    <RowDefinition
                        Height="Auto"
                        MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition
                        Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Fill="{TemplateBinding Foreground}"
                    Height="4"
                    Margin="0,0,0,2"
                    Placement="Top"
                    Grid.Row="0"
                    Visibility="Collapsed" />
                <TickBar
                    x:Name="BottomTick"
                    Fill="{TemplateBinding Foreground}"
                    Height="4"
                    Margin="0,2,0,0"
                    Placement="Bottom"
                    Grid.Row="2"
                    Visibility="Collapsed" />
                <Border
                    x:Name="TrackBackground"
                    Background="{StaticResource SliderThumb.Track.Background}"
                    BorderBrush="{StaticResource SliderThumb.Track.Border}"
                    BorderThickness="1"
                    Height="4.0"
                    Margin="5,0"
                    Grid.Row="1"
                    VerticalAlignment="center">
                    <Canvas
                        Margin="-6,-1">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Height="4.0"
                            Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track
                    x:Name="PART_Track"
                    Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static Slider.DecreaseLarge}"
                            Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static Slider.IncreaseLarge}"
                            Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Focusable="False"
                            Height="18"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbHorizontalDefault}"
                            VerticalAlignment="Center"
                            Width="11" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="TickPlacement"
                Value="TopLeft">
                <Setter
                    Property="Visibility"
                    TargetName="TopTick"
                    Value="Visible" />
                <Setter
                    Property="Template"
                    TargetName="Thumb"
                    Value="{StaticResource SliderThumbHorizontalTop}" />
                <Setter
                    Property="Margin"
                    TargetName="TrackBackground"
                    Value="5,2,5,0" />
            </Trigger>
            <Trigger
                Property="TickPlacement"
                Value="BottomRight">
                <Setter
                    Property="Visibility"
                    TargetName="BottomTick"
                    Value="Visible" />
                <Setter
                    Property="Template"
                    TargetName="Thumb"
                    Value="{StaticResource SliderThumbHorizontalBottom}" />
                <Setter
                    Property="Margin"
                    TargetName="TrackBackground"
                    Value="5,0,5,2" />
            </Trigger>
            <Trigger
                Property="TickPlacement"
                Value="Both">
                <Setter
                    Property="Visibility"
                    TargetName="TopTick"
                    Value="Visible" />
                <Setter
                    Property="Visibility"
                    TargetName="BottomTick"
                    Value="Visible" />
            </Trigger>
            <Trigger
                Property="IsSelectionRangeEnabled"
                Value="true">
                <Setter
                    Property="Visibility"
                    TargetName="PART_SelectionRange"
                    Value="Visible" />
            </Trigger>
            <Trigger
                Property="IsKeyboardFocused"
                Value="true">
                <Setter
                    Property="Foreground"
                    TargetName="Thumb"
                    Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="SliderThumbVerticalDefault"
        TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            UseLayoutRounding="True"
            VerticalAlignment="Center">
            <Path
                x:Name="grip"
                Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                Stretch="Fill" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger
                Property="IsDragging"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="SliderThumbVerticalLeft"
        TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            UseLayoutRounding="True"
            VerticalAlignment="Center">
            <Path
                x:Name="grip"
                Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                Stretch="Fill" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger
                Property="IsDragging"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="SliderThumbVerticalRight"
        TargetType="{x:Type Thumb}">
        <Grid
            HorizontalAlignment="Center"
            UseLayoutRounding="True"
            VerticalAlignment="Center">
            <Path
                x:Name="grip"
                Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                Fill="{StaticResource SliderThumb.Static.Background}"
                Stroke="{StaticResource SliderThumb.Static.Border}"
                Stretch="Fill" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger
                Property="IsDragging"
                Value="true">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Fill"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter
                    Property="Stroke"
                    TargetName="grip"
                    Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate
        x:Key="SliderVertical"
        TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto" />
                    <ColumnDefinition
                        MinWidth="{TemplateBinding MinWidth}"
                        Width="Auto" />
                    <ColumnDefinition
                        Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar
                    x:Name="TopTick"
                    Grid.Column="0"
                    Fill="{TemplateBinding Foreground}"
                    Margin="0,0,2,0"
                    Placement="Left"
                    Visibility="Collapsed"
                    Width="4" />
                <TickBar
                    x:Name="BottomTick"
                    Grid.Column="2"
                    Fill="{TemplateBinding Foreground}"
                    Margin="2,0,0,0"
                    Placement="Right"
                    Visibility="Collapsed"
                    Width="4" />
                <Border
                    x:Name="TrackBackground"
                    Background="{StaticResource SliderThumb.Track.Background}"
                    BorderBrush="{StaticResource SliderThumb.Track.Border}"
                    BorderThickness="1"
                    Grid.Column="1"
                    HorizontalAlignment="center"
                    Margin="0,5"
                    Width="4.0">
                    <Canvas
                        Margin="-1,-6">
                        <Rectangle
                            x:Name="PART_SelectionRange"
                            Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                            Visibility="Hidden"
                            Width="4.0" />
                    </Canvas>
                </Border>
                <Track
                    x:Name="PART_Track"
                    Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static Slider.DecreaseLarge}"
                            Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static Slider.IncreaseLarge}"
                            Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            x:Name="Thumb"
                            Focusable="False"
                            Height="11"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource SliderThumbVerticalDefault}"
                            VerticalAlignment="Top"
                            Width="18" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger
                Property="TickPlacement"
                Value="TopLeft">
                <Setter
                    Property="Visibility"
                    TargetName="TopTick"
                    Value="Visible" />
                <Setter
                    Property="Template"
                    TargetName="Thumb"
                    Value="{StaticResource SliderThumbVerticalLeft}" />
                <Setter
                    Property="Margin"
                    TargetName="TrackBackground"
                    Value="2,5,0,5" />
            </Trigger>
            <Trigger
                Property="TickPlacement"
                Value="BottomRight">
                <Setter
                    Property="Visibility"
                    TargetName="BottomTick"
                    Value="Visible" />
                <Setter
                    Property="Template"
                    TargetName="Thumb"
                    Value="{StaticResource SliderThumbVerticalRight}" />
                <Setter
                    Property="Margin"
                    TargetName="TrackBackground"
                    Value="0,5,2,5" />
            </Trigger>
            <Trigger
                Property="TickPlacement"
                Value="Both">
                <Setter
                    Property="Visibility"
                    TargetName="TopTick"
                    Value="Visible" />
                <Setter
                    Property="Visibility"
                    TargetName="BottomTick"
                    Value="Visible" />
            </Trigger>
            <Trigger
                Property="IsSelectionRangeEnabled"
                Value="true">
                <Setter
                    Property="Visibility"
                    TargetName="PART_SelectionRange"
                    Value="Visible" />
            </Trigger>
            <Trigger
                Property="IsKeyboardFocused"
                Value="true">
                <Setter
                    Property="Foreground"
                    TargetName="Thumb"
                    Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style
        x:Key="DiamondSliderStyle"
        TargetType="{x:Type Slider}">
        <Setter
            Property="Stylus.IsPressAndHoldEnabled"
            Value="false" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="{StaticResource SliderThumb.Static.Foreground}" />
        <Setter
            Property="Template"
            Value="{StaticResource SliderHorizontal}" />
        <Style.Triggers>
            <Trigger
                Property="Orientation"
                Value="Vertical">
                <Setter
                    Property="Template"
                    Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Toggle Button-->

    <SolidColorBrush
        x:Key="Button.Static.Background"
        Color="{StaticResource LightTeal}" />
    <SolidColorBrush
        x:Key="Button.Static.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="Button.Checked.Background"
        Color="{StaticResource DarkGrayBlue}" />
    <SolidColorBrush
        x:Key="Button.MouseOver.Background"
        Color="{StaticResource LightGrayBlue_85}" />
    <SolidColorBrush
        x:Key="Button.MouseOver.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="Button.Pressed.Background"
        Color="{StaticResource DarkGrayBlue_85}" />
    <SolidColorBrush
        x:Key="Button.Pressed.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="Button.Disabled.Background"
        Color="#FFF4F4F4" />
    <SolidColorBrush
        x:Key="Button.Disabled.Border"
        Color="#FFADB2B5" />
    <SolidColorBrush
        x:Key="Button.Disabled.Foreground"
        Color="#FF838383" />
    <Style
        x:Key="MyToggleButtonStyle"
        TargetType="{x:Type ToggleButton}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource Button.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource Button.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="1" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        x:Name="textblock"
                                        Foreground="{StaticResource WhiteBrush}"
                                        Style="{DynamicResource ButtonText}"
                                        Text="{Binding}">
                                    </TextBlock>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Button.IsDefaulted"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.Pressed.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Border}" />
                            <Setter
                                Property="TextElement.Foreground"
                                TargetName="contentPresenter"
                                Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                Property="Background"
                                Value="{StaticResource Button.Checked.Background}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>